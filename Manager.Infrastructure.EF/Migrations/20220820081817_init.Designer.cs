// <auto-generated />
using System;
using Manager.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Manager.Infrastructure.EF.Migrations
{
    [DbContext(typeof(ManagerContext))]
    [Migration("20220820081817_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manager.Core.Domain.Entities.Factor", b =>
                {
                    b.Property<int>("FactorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Costomer")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Factor_StoreId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SellTime")
                        .HasColumnType("DateTime");

                    b.Property<int>("Tedad")
                        .HasColumnType("INT");

                    b.HasKey("FactorId");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("Manager.Core.Domain.Entities.Factor_Store", b =>
                {
                    b.Property<int>("Factor_StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Factor_StoreId");

                    b.HasIndex("FactorId");

                    b.HasIndex("StoreId");

                    b.ToTable("Factor_Store");
                });

            modelBuilder.Entity("Manager.Core.Domain.Entities.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("FactorId")
                        .HasColumnType("int");

                    b.Property<int?>("FactorId1")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId1")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("FactorId");

                    b.HasIndex("FactorId1");

                    b.HasIndex("StoreId");

                    b.HasIndex("StoreId1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Manager.Core.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Factor_StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Mojodi")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Manager.Core.Domain.Entities.Factor_Store", b =>
                {
                    b.HasOne("Manager.Core.Domain.Entities.Factor", "Factor")
                        .WithMany("factor_Stores")
                        .HasForeignKey("FactorId");

                    b.HasOne("Manager.Core.Domain.Entities.Store", "Store")
                        .WithMany("factor_Stores")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("Manager.Core.Domain.Entities.Products", b =>
                {
                    b.HasOne("Manager.Core.Domain.Entities.Factor", "factor")
                        .WithMany()
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Core.Domain.Entities.Factor", null)
                        .WithMany("products")
                        .HasForeignKey("FactorId1");

                    b.HasOne("Manager.Core.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Core.Domain.Entities.Store", null)
                        .WithMany("products")
                        .HasForeignKey("StoreId1");
                });
#pragma warning restore 612, 618
        }
    }
}
